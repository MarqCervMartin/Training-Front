{"ast":null,"code":"var _jsxFileName = \"/home/gustavo/Documentos/CHAT-REACT-FAKE/Training-Front/src/Componentes/Hooks_Router/Hook_Location.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UseLocation() {\n  _s();\n\n  const return_clic = useHistory();\n  const location = useLocation();\n  const [loc, setLoc] = useState(location.pathname);\n\n  const returnClic = () => {\n    return_clic.push('/hooks_Router');\n  };\n\n  const checkLoc = () => {\n    // const local = location.pathname;\n    setLoc(loc);\n    console.log(loc); //setLoc(loc.useState(location.pathname))       \n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Hook useLocation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"El hook useLocation devuelve el objeto de ubicacion que representa la URL actual. Puede pensar en ello como un \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"useState que devuelve una nueva ubicacion cada vez que cambia la URL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: returnClic,\n      children: \"Regresar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"resultado = \", loc, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: checkLoc,\n      children: \"Prueba de hook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"checa la consola :)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UseLocation, \"xCKCmWetKLxKxVWqN6T/oOxWLt4=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = UseLocation;\nexport default UseLocation;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseLocation\");","map":{"version":3,"sources":["/home/gustavo/Documentos/CHAT-REACT-FAKE/Training-Front/src/Componentes/Hooks_Router/Hook_Location.js"],"names":["useState","useHistory","useLocation","UseLocation","return_clic","location","loc","setLoc","pathname","returnClic","push","checkLoc","console","log"],"mappings":";;;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,kBAAxC;;;AAGA,SAASC,WAAT,GAA0B;AAAA;;AACtB,QAAMC,WAAW,GAAGH,UAAU,EAA9B;AAGA,QAAMI,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAM,CAACI,GAAD,EAAKC,MAAL,IAAeP,QAAQ,CAACK,QAAQ,CAACG,QAAV,CAA7B;;AACA,QAAMC,UAAU,GAAG,MAAM;AACrBL,IAAAA,WAAW,CAACM,IAAZ,CAAiB,eAAjB;AAEH,GAHD;;AAMA,QAAMC,QAAQ,GAAG,MAAM;AACpB;AACCJ,IAAAA,MAAM,CAACD,GAAD,CAAN;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ,EAHmB,CAInB;AACH,GALD;;AAUA,sBACI;AAAA,4BAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAIK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJL,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,eAYI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEG,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ,eAeI;AAAA,iCAAiBH,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAfJ,eAgBI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEK,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBJ,eAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH;;GA9CQR,W;UACeF,U,EAGHC,W;;;KAJZC,W;AAgDT,eAAeA,WAAf","sourcesContent":["\nimport { useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\n\nfunction UseLocation(   ) {\n    const return_clic = useHistory();\n    \n\n    const location = useLocation();\n    const [loc,setLoc] = useState(location.pathname);\n    const returnClic = () => {\n        return_clic.push('/hooks_Router')\n       \n    }\n    \n\n    const checkLoc = () => {\n       // const local = location.pathname;\n        setLoc(loc);\n        console.log(loc); \n        //setLoc(loc.useState(location.pathname))       \n    }\n    \n   \n\n   \n    return (\n        <div>\n\n            <h2>Hook useLocation</h2>\n\n             <p>\n                 El hook useLocation devuelve el objeto de ubicacion\n                 que representa la URL actual. Puede pensar en ello como un </p>\n            <p>\n                 useState que devuelve una nueva ubicacion cada vez que cambia la URL</p>\n\n            \n\n            <button type=\"button\" onClick={returnClic}>\n                Regresar\n            </button>\n            <h4>resultado = {loc} </h4>\n            <button type=\"button\" onClick={checkLoc}>\n                Prueba de hook\n            </button>\n            <p>checa la consola :)</p>\n            \n        </div>\n    );\n}\n\nexport default UseLocation;\n"]},"metadata":{},"sourceType":"module"}